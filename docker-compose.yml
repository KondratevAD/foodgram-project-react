version: '3.3'
services:
  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGHOST=${DB_HOST}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=${DB_PORT}
    env_file:
      - ./.env
#  frontend:
#    image: kondratevad/foodgram:v1.0.0
#    build:
#      context: .
#      dockerfile: ./frontend/Dockerfile
#    volumes:
#      - .:/code/frontend/:/app/result_build/
#    depends_on:
#      - db
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/grocery_assistant/Dockerfile
    image: kondratevad/foodgram:v1.0.0
    restart: always
    volumes:
      - static_value:/code/static/
      - media_value:/code/media/
    env_file:
      - ./.env
    depends_on:
      - db
  migration:
    image: kondratevad/foodgram:v1.0.0
    volumes:
      - .:/code/backend/grocery_assistant/
    command: bash -c "python manage.py makemigrations --noinput &&
             python manage.py migrate --noinput &&
             python manage.py loaddata data/data.json"
    depends_on:
      - nginx
  nginx:
    image: nginx:1.19.3
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - backend
volumes:
  static_value:
  media_value:
  postgres_data:
  result_build: